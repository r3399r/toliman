{"version":3,"sources":["component/Textarea2MathJax.module.scss","pages/edit/Edit.module.scss","services/dropboxService.ts","services/googleService.ts","services/questionService.ts","pages/edit/Edit.tsx","component/Textarea2MathJax.tsx"],"names":["module","exports","dropbox","doc","initDropbox","Dropbox","accessToken","fetch","_fetch","uploadFile","commitedFile","a","undefined","filesUpload","contents","path","mode","loadFile","id","filesDownload","initGoogleSpreadsheet","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","loadInfo","addRow","sheetId","json","sheet","sheetsById","getRows","uploadQuestion","question","author","image","chapterId","JSON","stringify","Home","useState","countdown","setCountdown","isRendering","setIsRendering","setId","authorList","setAuthorList","setAuthor","chapterList","setChapterList","setChapterId","setQuestion","answer","setAnswer","hasImage","setHasImage","setImage","useEffect","Date","now","toString","then","rows","clearTimeout","newCountdown","setTimeout","result","className","style","content","placeholder","onChange","ev","obj","parse","target","value","res","fileBlob","defaultValue","Option","disabled","hidden","map","val","i","name","chapter","TextArea","onClick","beforeUpload","file","maxCount","preview","Textarea2MathJax","text","ans","allowBlock","alert","src","URL","createObjectURL","alt","role","Provider","split","line","index","splited","length","Node","formula","cnt","inline"],"mappings":"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","file":"static/js/5.ff246c5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Textarea2MathJax_image__2MfBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Edit_content__1fCKD\",\"q\":\"Edit_q__jwYtu\",\"ans\":\"Edit_ans__27WM8\",\"preview\":\"Edit_preview__Sxhvb\"};","import { Dropbox } from 'dropbox';\nimport _fetch from 'isomorphic-fetch';\n\nlet dropbox: Dropbox;\n\nconst initDropbox = () => {\n  dropbox = new Dropbox({\n    accessToken: 'oDm3_-3br4cAAAAAAAG4jAOBl0tgqzsLfNyQNjisoLRuwEpX5Fc40fPNKIAtFEYy',\n    fetch: _fetch,\n  });\n};\n\ntype CommitedFile = {\n  contents: Object;\n  path: string;\n};\n\nexport const uploadFile = async (commitedFile: CommitedFile) => {\n  if (dropbox === undefined) initDropbox();\n\n  return await dropbox.filesUpload({\n    contents: commitedFile.contents,\n    path: commitedFile.path,\n    mode: { '.tag': 'overwrite' },\n  });\n};\n\nexport const loadFile = async (id: string) => {\n  if (dropbox === undefined) initDropbox();\n\n  return await dropbox.filesDownload({\n    path: `/toliman/${id}.jpg`,\n  });\n};\n","import { GoogleSpreadsheet, GoogleSpreadsheetRow } from 'google-spreadsheet';\n\nlet doc: GoogleSpreadsheet;\n\nconst initGoogleSpreadsheet = async () => {\n  doc = new GoogleSpreadsheet('1tr5Kbe-q99fNAZSBwvMpA6ZUaHvkPZiu66mpwJaYKf0');\n  await doc.useServiceAccountAuth({\n    client_email: 'tolimanbuilder@toliman-310514.iam.gserviceaccount.com',\n    private_key:\n      '-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCzZ2sZNOuzTP05\\nGX4fDAjicsppzqvLrib/NEWueo2kXuhfpt7QL6+ma4ovX3Dsd79wicybYJowg+3g\\nOkWz004AtG2+X21k0eyDuWLUrcbrZ4NqAFpP2OTJKkdIKffegpfNzKjzbjIYbv88\\nOcbvU8EOsJ4Qz1zU/YrX8D+qkSy34pdNykx2e9Am9jI3W98jUYFcY936e0z5M7cL\\n75T56b5xjhSBYF0K3vmI4v8qzbyxdRdP6dVr6mUE66P9XBjO0Xuw+VV32CFtPmFa\\nbmMtJXVzuQm8ksjd0wskvn7Qya/WIklhhT86eFuNj0rouUOdCRByMPS2kTtf7JLY\\nPg4NsFODAgMBAAECggEAAw8g4uGloT2PVdFq9qGQZzgY3nwBLuxtys074PFDCAn8\\nQWFJjFg70QUlapBgjw+tqoAXBpE7n9coD7o+pQXV3yo0ctoStfTkaQyYtFKwQSRX\\nN9AAujrTD+ESLRdWHCuy5fX27Yuz+/msjXzYuQz/Dj6Ru2ylwxX9r5fvpftqvUnv\\nBos6jL1z1inrilGQqK5yqLP6x8Bw1nQf0jku4w32ufzuAzMz8gXAp+UI2Cp+VBaq\\naefntiStusyFr/UnY8DssDSZBGqqJ/YhqUQ7JA19ncbdJR28200Sob+rigpwgwl+\\npa5vb0qNu0WmJHHziE3TPya/xq54S6/YKB7CKNbWKQKBgQDWZytooVbfK9fG0X+g\\nVBmTNPl8yL5NsTkOoC6QSLSfD5D+GhxRHkXzU9NKHo+aXz2jpva6u1WNk1Xt+pIY\\n+nzMevFXoQYHt6MD9x0QFFTff5q4A14nH7iZW0HVl2JN7vVu6DqN7i7PxSoiKnVQ\\nOn8ETveMJ5y/+VE7SwPajtylOwKBgQDWNfCJWiBXlVjnRuj2736jjY4Bf84LGmZ+\\nMKZODw0VUG2RKXqI86dqZbKlFKQxFAWgMz4aGyFMZUVrrZtNKoIrsBEalfLXtGVF\\n7iqhfidekZ4NANIh59ACCRpRjUDFGepgj7kVeEYaxTciFAkU4xZZWAde1pn/46dn\\nmHjKjZqGWQKBgQC3IK3yE4Ro4EDQf9Z78flaQ/ApBimNoKb0eBrtgDxOc/RLJbA0\\nFSB4QowBDfNoTpsOcijhu+rKHyNRPimVjjYUTZpgV5gX9WEWnPZE6qjHsW1MaQv9\\nbNm2mzyzHDeKC2W1EkQZQGzZaDWhsxQ6r4wX+P71xkvbqS8Z7uvevRF3SwKBgQC3\\nyyoqP4k2fK7+KYpjrZPj8uXgBW+deTZtmYJnwWRBYHPSNFutvBluIfoIyFAkyAAX\\ntz/WmGaWrOHGhPuWVx2/LF9Qh04IpACs4q/zRlGzQ4/vqj+h1ctUo8jQJjlnpFfE\\nKCzu7faAq6wlcjlkkX+wguY4CjuyIfuV2G3zpVHraQKBgFfWPVCvgItCTCJVSlmC\\nWgnbpeJi/sXiVlBhqsI8Mug93rE7unjQMREznsocoj1xazU5k06yPhxrAW4nPUnH\\nVz477ABzWPV1FA6onnBrgTVxjirK2jnpMUmJhvcTorCbyQIYLFIMSAxzzxvgOZy1\\nJ8nLltHU+PDOv0QL5e/cGURS\\n-----END PRIVATE KEY-----\\n',\n  });\n\n  await doc.loadInfo();\n};\n\nexport const addRow = async (sheetId: string, json: { [key: string]: string | boolean }) => {\n  await initGoogleSpreadsheet();\n  const sheet = doc.sheetsById[sheetId];\n  await sheet.addRow(json);\n};\n\nexport const getRows = async (sheetId: string) => {\n  await initGoogleSpreadsheet();\n  const sheet = doc.sheetsById[sheetId];\n\n  return await sheet.getRows();\n};\n","import { uploadFile } from './dropboxService';\nimport { addRow } from './googleService';\n\nexport type Chapter = {\n  id: string;\n  chapter: string;\n};\n\nexport type Question = {\n  id: string;\n  chapterId: string;\n  question: string;\n  answer: string;\n  hasImage: boolean;\n};\n\nexport const uploadQuestion = async (\n  question: Question,\n  author: string,\n  image: File | undefined,\n) => {\n  if (image !== undefined)\n    await uploadFile({ contents: image, path: `/toliman/${question.id}.jpg` });\n\n  await addRow(question.chapterId, { id: question.id, json: JSON.stringify(question), author });\n};\n","import { Button, DatePicker, Input, Select, Upload } from 'antd';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\nimport { GoogleSpreadsheetRow } from 'google-spreadsheet';\nimport React, { useEffect, useState } from 'react';\nimport Textarea2MathJax from 'src/component/Textarea2MathJax';\nimport { loadFile } from 'src/services/dropboxService';\nimport { getRows } from 'src/services/googleService';\nimport { Question, uploadQuestion } from 'src/services/questionService';\nimport style from './Edit.module.scss';\n\nconst Home = () => {\n  const [countdown, setCountdown] = useState<NodeJS.Timeout>();\n  const [isRendering, setIsRendering] = useState<boolean>(false);\n\n  const [id, setId] = useState<string>('');\n\n  const [authorList, setAuthorList] = useState<GoogleSpreadsheetRow[]>([]);\n  const [author, setAuthor] = useState<string>('');\n\n  const [chapterList, setChapterList] = useState<GoogleSpreadsheetRow[]>([]);\n  const [chapterId, setChapterId] = useState<string>('');\n\n  const [question, setQuestion] = useState<string>('');\n  const [answer, setAnswer] = useState<string>('');\n\n  const [hasImage, setHasImage] = useState<boolean>(false);\n  const [image, setImage] = useState<File>();\n\n  useEffect(() => {\n    setId(Date.now().toString(16));\n    getRows('372130198').then((rows: GoogleSpreadsheetRow[]) => {\n      setChapterList(rows);\n    });\n    getRows('10449496').then((rows: GoogleSpreadsheetRow[]) => {\n      setAuthorList(rows);\n    });\n  }, []);\n\n  useEffect(() => {\n    setIsRendering(true);\n    if (countdown) clearTimeout(countdown);\n    const newCountdown = setTimeout(() => {\n      setIsRendering(false);\n    }, 600);\n    setCountdown(newCountdown);\n  }, [question, answer]);\n\n  const handleEdit = (ev: { target: HTMLInputElement }) => {\n    const obj: Question = JSON.parse(ev.target.value);\n\n    setId(obj.id);\n    setQuestion(obj.question);\n    setAnswer(obj.answer);\n\n    if (obj.hasImage)\n      loadFile(obj.id).then((res: any) => {\n        setImage(res.result.fileBlob);\n      });\n  };\n\n  const handleSelectAuthor = (value: string) => {\n    setAuthor(value);\n  };\n\n  const handleSelectChapter = (value: string) => {\n    setChapterId(value);\n  };\n\n  const handleQuestionEvent = (ev: { target: HTMLTextAreaElement }) => {\n    setQuestion(ev.target.value);\n  };\n\n  const handleAnswerEvent = (ev: { target: HTMLTextAreaElement }) => {\n    setAnswer(ev.target.value);\n  };\n\n  const onCheckboxClick = () => {\n    if (!hasImage === false) setImage(undefined);\n    setHasImage(!hasImage);\n  };\n\n  const displayImage = (file: File) => {\n    setImage(file);\n\n    return false;\n  };\n\n  const handleUpload = () => {\n    if (chapterId === '') alert('請選擇章節');\n    else if (question === '') alert('請輸入題目');\n    else if (answer === '') alert('請輸入答案');\n    else if (hasImage && !image) alert('請上傳圖片');\n    else\n      uploadQuestion(result, author, image).then(() => {\n        setId(Date.now().toString(16));\n      });\n  };\n\n  const result: Question = { id, chapterId, question, answer, hasImage };\n\n  return (\n    <div className={style.content}>\n      <div>修改</div>\n      <Input placeholder=\"貼上JSON\" onChange={handleEdit} />\n      <div>作者</div>\n      <Select onChange={handleSelectAuthor} defaultValue=\"default\">\n        <Select.Option value=\"default\" disabled={true} hidden={true}>\n          選擇作者\n        </Select.Option>\n        {authorList.map((val: GoogleSpreadsheetRow, i: number) => {\n          return (\n            <Select.Option key={i} value={val.name}>\n              {val.name}\n            </Select.Option>\n          );\n        })}\n      </Select>\n      <div>章節</div>\n      <Select onChange={handleSelectChapter} defaultValue=\"default\">\n        <Select.Option value=\"default\" disabled={true} hidden={true}>\n          選擇章節\n        </Select.Option>\n        {chapterList.map((val: GoogleSpreadsheetRow, i: number) => {\n          return (\n            <Select.Option key={i} value={val.id}>\n              {val.chapter}\n            </Select.Option>\n          );\n        })}\n      </Select>\n      <div>題目</div>\n      <Input.TextArea\n        rows={4}\n        placeholder=\"輸入題目\"\n        onChange={handleQuestionEvent}\n        value={question}\n      />\n      <div>答案</div>\n      <Input.TextArea rows={2} placeholder=\"輸入答案\" onChange={handleAnswerEvent} value={answer} />\n      <div>\n        <Checkbox id=\"hasImage\" onClick={onCheckboxClick}>\n          是否有圖\n        </Checkbox>\n      </div>\n      {hasImage && (\n        <Upload beforeUpload={displayImage} maxCount={1}>\n          <Button>選擇檔案</Button>\n        </Upload>\n      )}\n      <hr />\n      <div className={style.preview}>\n        {isRendering === true && <div>產生中...</div>}\n        {isRendering === false && question && <Textarea2MathJax text={question} image={image} />}\n        {isRendering === false && answer && (\n          <Textarea2MathJax className={style.ans} text={'Ans: ' + answer} allowBlock={false} />\n        )}\n      </div>\n      <hr />\n      <div>{JSON.stringify(result)}</div>\n      <Button onClick={handleUpload}>上傳</Button>\n    </div>\n  );\n};\n\nexport default Home;\n","import MathJax from 'react-mathjax';\nimport style from './Textarea2MathJax.module.scss';\n\ntype Props = {\n  text: string;\n  allowBlock?: boolean;\n  className?: string;\n  image?: File;\n};\n\nconst Textarea2MathJax = ({ className, text, allowBlock = true, image }: Props) => {\n  return (\n    <div className={className}>\n      {image && (\n        <img className={style.image} src={URL.createObjectURL(image)} alt=\"\" role=\"presentation\" />\n      )}\n      <MathJax.Provider>\n        {text.split('\\n').map((line: string, index: number) => {\n          const splited: string[] = line.split('$$');\n\n          if (allowBlock === true && splited.length === 3 && splited[0] === '' && splited[2] === '')\n            return <MathJax.Node formula={splited[1]} key={index} />;\n\n          return (\n            <div key={index}>\n              {splited.map((val: string, cnt: number) => {\n                if (cnt % 2 === 0) return val;\n\n                return <MathJax.Node inline={true} formula={val} key={cnt} />;\n              })}\n            </div>\n          );\n        })}\n      </MathJax.Provider>\n    </div>\n  );\n};\n\nexport default Textarea2MathJax;\n"],"sourceRoot":""}