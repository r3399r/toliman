{"version":3,"sources":["pages/edit/Edit.module.scss","pages/edit/Edit.tsx","services/questionService.ts"],"names":["module","exports","Home","useState","countdown","setCountdown","isRendering","setIsRendering","id","setId","randomId","setRandomId","chapter","setChapter","question","setQuestion","answer","setAnswer","hasImage","setHasImage","image","setImage","useEffect","Date","now","toString","clearTimeout","newCountdown","setTimeout","result","className","style","content","placeholder","onChange","ev","inputId","target","value","res","getQuestion","undefined","alert","Group","options","chapterList","val","TextArea","rows","onClick","beforeUpload","file","URL","createObjectURL","maxCount","preview","src","alt","role","text","ans","allowBlock","JSON","stringify","questionsByKey","getAllQuestions","lodash","keyBy","bank","getQuestions","ids","allQuestions","map"],"mappings":"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","file":"static/js/12.b8a4e1f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Edit_content__28Uh3\",\"q\":\"Edit_q__1Sctj\",\"ans\":\"Edit_ans__3cClk\",\"preview\":\"Edit_preview__qzFzg\",\"image\":\"Edit_image__3trG8\"};","import { Button, Checkbox, Input, Radio, RadioChangeEvent, Upload } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Textarea2MathJax from 'src/component/Textarea2MathJax';\nimport { chapterList, Question } from 'src/model/bank';\nimport { getQuestion } from 'src/services/questionService';\nimport style from './Edit.module.scss';\n\nconst Home = () => {\n  const [countdown, setCountdown] = useState<NodeJS.Timeout>();\n  const [isRendering, setIsRendering] = useState<boolean>(false);\n\n  const [id, setId] = useState<string>('');\n  const [randomId, setRandomId] = useState<string>('');\n\n  const [chapter, setChapter] = useState<string>('');\n\n  const [question, setQuestion] = useState<string>('');\n  const [answer, setAnswer] = useState<string>('');\n\n  const [hasImage, setHasImage] = useState<boolean>(false);\n  const [image, setImage] = useState<string>('');\n\n  useEffect(() => {\n    setRandomId(Date.now().toString(16));\n  }, [question, answer]);\n\n  useEffect(() => {\n    setIsRendering(true);\n    if (countdown) clearTimeout(countdown);\n    const newCountdown = setTimeout(() => {\n      setIsRendering(false);\n    }, 600);\n    setCountdown(newCountdown);\n  }, [question, answer]);\n\n  const handleEdit = (ev: { target: HTMLInputElement }) => {\n    const inputId: string = ev.target.value;\n    const res: Question | undefined = getQuestion(inputId);\n\n    if (inputId === '') setId('');\n    else if (res === undefined) alert(`id: ${inputId} 不存在`);\n    else {\n      setId(inputId);\n      setChapter(res.chapter);\n      setQuestion(res.question);\n      setAnswer(res.answer);\n      setHasImage(res.hasImage);\n      if (res.hasImage) setImage(`images/${inputId}.jpg`);\n    }\n  };\n\n  const handleCheckbox = (val: RadioChangeEvent) => {\n    setChapter(val.target.value);\n  };\n\n  const handleQuestionEvent = (ev: { target: HTMLTextAreaElement }) => {\n    setQuestion(ev.target.value);\n  };\n\n  const handleAnswerEvent = (ev: { target: HTMLTextAreaElement }) => {\n    setAnswer(ev.target.value);\n  };\n\n  const onCheckboxClick = () => {\n    if (!hasImage === false) setImage('');\n    setHasImage(!hasImage);\n  };\n\n  const displayImage = (file: File) => {\n    setImage(URL.createObjectURL(file));\n\n    return false;\n  };\n\n  const result: Question = { id: id === '' ? randomId : id, chapter, question, answer, hasImage };\n\n  return (\n    <div className={style.content}>\n      <div>修改</div>\n      <Input placeholder=\"貼上JSON\" onChange={handleEdit} />\n      <div>章節</div>\n      <Radio.Group options={chapterList} onChange={handleCheckbox} />\n      <div>題目</div>\n      <Input.TextArea\n        rows={4}\n        placeholder=\"輸入題目\"\n        onChange={handleQuestionEvent}\n        value={question}\n      />\n      <div>答案</div>\n      <Input.TextArea rows={2} placeholder=\"輸入答案\" onChange={handleAnswerEvent} value={answer} />\n      <div>\n        <Checkbox id=\"hasImage\" onClick={onCheckboxClick}>\n          是否有圖\n        </Checkbox>\n      </div>\n      {hasImage && (\n        <Upload beforeUpload={displayImage} maxCount={1}>\n          <Button>選擇檔案</Button>\n        </Upload>\n      )}\n      <hr />\n      <div className={style.preview}>\n        {isRendering === true && <div>產生中...</div>}\n        {image !== '' && <img className={style.image} src={image} alt=\"\" role=\"presentation\" />}\n        {isRendering === false && question && <Textarea2MathJax text={question} />}\n        {isRendering === false && answer && (\n          <Textarea2MathJax className={style.ans} text={'Ans: ' + answer} allowBlock={false} />\n        )}\n      </div>\n      <hr />\n      <div>{JSON.stringify(result)}</div>\n      <div>\n        <CopyToClipboard text={JSON.stringify(result)}>\n          <Button>複製文字</Button>\n        </CopyToClipboard>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import lodash from 'lodash';\nimport { bank, Question } from 'src/model/bank';\n\nlet questionsByKey: { [key: string]: Question };\n\nexport const getAllQuestions = (): { [key: string]: Question } => {\n  if (questionsByKey === undefined) questionsByKey = lodash.keyBy(bank, 'id');\n\n  return questionsByKey;\n};\n\nexport const getQuestion = (id: string): Question | undefined => {\n  const allQuestions = getAllQuestions();\n\n  return allQuestions[id];\n};\n\nexport const getQuestions = (ids: string[]): Question[] => {\n  const allQuestions = getAllQuestions();\n\n  return ids.map((id: string) => allQuestions[id]);\n};\n"],"sourceRoot":""}