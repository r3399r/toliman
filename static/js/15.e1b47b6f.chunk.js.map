{"version":3,"sources":["pages/projection/Projection.module.scss","pages/projection/Projection.tsx","services/questionService.ts"],"names":["module","exports","Projection","q","getQuestion","undefined","className","style","content","classNames","num","font","hasImage","img","src","id","alt","role","text","question","questionsByKey","getAllQuestions","lodash","keyBy","bank","getQuestions","ids","allQuestions","map"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,IAAM,wBAAwB,IAAM,wBAAwB,KAAO,2B,iCCD3H,qEAwBeC,UAlBI,WACjB,IAEMC,EAA0BC,YADb,eAGnB,YAAUC,IAANF,EAAwB,qBAAKG,UAAWC,IAAMC,QAAtB,gCAG1B,sBAAKF,UAAWC,IAAMC,QAAtB,UACE,qBAAKF,UAAWG,IAAWF,IAAMG,IAAKH,IAAMI,MAA5C,SARgB,wBASA,IAAfR,EAAES,UACD,qBAAKN,UAAWC,IAAMM,IAAKC,IAAG,iBAAYX,EAAEY,GAAd,QAAwBC,IAAI,GAAGC,KAAK,iBAEpE,cAAC,IAAD,CAAkBX,UAAWC,IAAMI,KAAMO,KAAI,UAAKf,EAAEgB,iB,gCCnB1D,wEAGIC,EAHJ,yBAKaC,EAAkB,WAG7B,YAFuBhB,IAAnBe,IAA8BA,EAAiBE,IAAOC,MAAMC,IAAM,OAE/DJ,GAGIhB,EAAc,SAACW,GAG1B,OAFqBM,IAEDN,IAGTU,EAAe,SAACC,GAC3B,IAAMC,EAAeN,IAErB,OAAOK,EAAIE,KAAI,SAACb,GAAD,OAAgBY,EAAaZ","file":"static/js/15.e1b47b6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Projection_content__qEYDP\",\"num\":\"Projection_num__X5VVN\",\"img\":\"Projection_img__XcEJE\",\"font\":\"Projection_font__CrGuZ\"};","import classNames from 'classnames';\nimport Textarea2MathJax from 'src/component/Textarea2MathJax';\nimport { Question } from 'src/model/bank';\nimport { getQuestion } from 'src/services/questionService';\nimport style from './Projection.module.scss';\n\nconst Projection = () => {\n  const num: string = 'p.31 例題2';\n  const id: string = '1798fa42cb3';\n  const q: Question | undefined = getQuestion(id);\n\n  if (q === undefined) return <div className={style.content}>Question Not Found</div>;\n\n  return (\n    <div className={style.content}>\n      <div className={classNames(style.num, style.font)}>{num}</div>\n      {q.hasImage === true && (\n        <img className={style.img} src={`images/${q.id}.jpg`} alt=\"\" role=\"presentation\" />\n      )}\n      <Textarea2MathJax className={style.font} text={`${q.question}`} />\n    </div>\n  );\n};\n\nexport default Projection;\n","import lodash from 'lodash';\nimport { bank, Question } from 'src/model/bank';\n\nlet questionsByKey: { [key: string]: Question };\n\nexport const getAllQuestions = (): { [key: string]: Question } => {\n  if (questionsByKey === undefined) questionsByKey = lodash.keyBy(bank, 'id');\n\n  return questionsByKey;\n};\n\nexport const getQuestion = (id: string): Question | undefined => {\n  const allQuestions = getAllQuestions();\n\n  return allQuestions[id];\n};\n\nexport const getQuestions = (ids: string[]): Question[] => {\n  const allQuestions = getAllQuestions();\n\n  return ids.map((id: string) => allQuestions[id]);\n};\n"],"sourceRoot":""}