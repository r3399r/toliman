{"version":3,"sources":["pages/edit/Edit.module.scss","pages/edit/Edit.tsx"],"names":["module","exports","Home","useState","countdown","setCountdown","isRendering","setIsRendering","randomId","setRandomId","chapter","setChapter","question","setQuestion","answer","setAnswer","hasImage","setHasImage","useEffect","Date","now","toString","clearTimeout","newCountdown","setTimeout","result","id","className","style","content","placeholder","onChange","ev","inputJSON","target","value","res","JSON","parse","undefined","message","error","e","Group","options","chapterList","val","TextArea","rows","checked","onClick","preview","text","ans","allowBlock","stringify","onCopy","success"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,EAAI,gBAAgB,IAAM,kBAAkB,QAAU,sBAAsB,MAAQ,sB,0JCkHvHC,UA5GF,WACX,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAkB,GAAxD,mBAAOG,EAAP,KAAoBC,EAApB,KAEA,EAAgCJ,mBAAiB,IAAjD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,EAA8BN,mBAAiB,IAA/C,mBAAOO,EAAP,KAAgBC,EAAhB,KAEA,EAAgCR,mBAAiB,IAAjD,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA4BV,mBAAiB,IAA7C,mBAAOW,EAAP,KAAeC,EAAf,KAEA,EAAgCZ,oBAAkB,GAAlD,mBAAOa,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRT,EAAYU,KAAKC,MAAMC,SAAS,OAC/B,CAACT,EAAUE,IAEdI,qBAAU,WACRX,GAAe,GACXH,GAAWkB,aAAalB,GAC5B,IAAMmB,EAAeC,YAAW,WAC9BjB,GAAe,KACd,KACHF,EAAakB,KACZ,CAACX,EAAUE,IAEd,IAyCMW,EAAmB,CAAEC,GAAIlB,EAAUE,UAASE,WAAUE,SAAQE,YAEpE,OACE,sBAAKW,UAAWC,IAAMC,QAAtB,UACE,+CACA,cAAC,IAAD,CAAOC,YAAY,mBAASC,SA9Cb,SAACC,GAClB,IACE,IAAMC,EAAoBD,EAAGE,OAAOC,MAC9BC,EAAgBC,KAAKC,MAAML,QAGdM,IAAjBH,EAAIxB,eACa2B,IAAjBH,EAAIxB,eACW2B,IAAfH,EAAItB,aACayB,IAAjBH,EAAIpB,UAEJwB,IAAQC,MAAM,4BAChB9B,EAAWyB,EAAI1B,SACfG,EAAYuB,EAAIxB,UAChBG,EAAUqB,EAAItB,QACdG,EAAYmB,EAAIpB,UAChB,MAAO0B,GACPF,IAAQC,MAAM,gCA8Bd,+CACA,cAAC,IAAME,MAAP,CAAaC,QAASC,IAAad,SA3BhB,SAACe,GACtBnC,EAAWmC,EAAIZ,OAAOC,QA0ByCA,MAAOzB,IACpE,+CACA,cAAC,IAAMqC,SAAP,CACEC,KAAM,EACNlB,YAAY,2BACZC,SA5BsB,SAACC,GAC3BnB,EAAYmB,EAAGE,OAAOC,QA4BlBA,MAAOvB,IAET,+CACA,cAAC,IAAMmC,SAAP,CAAgBC,KAAM,EAAGlB,YAAY,2BAAOC,SA5BtB,SAACC,GACzBjB,EAAUiB,EAAGE,OAAOC,QA2BuDA,MAAOrB,IAChF,8BACE,cAAC,IAAD,CAAUY,GAAG,WAAWuB,QAASjC,EAAUkC,QA1BzB,WACtBjC,GAAaD,IAyBT,wCAIF,uBACA,sBAAKW,UAAWC,IAAMuB,QAAtB,WACmB,IAAhB7C,GAAwB,yDACR,IAAhBA,GAAyBM,GAAY,cAAC,IAAD,CAAkBwC,KAAMxC,KAC7C,IAAhBN,GAAyBQ,GACxB,cAAC,IAAD,CAAkBa,UAAWC,IAAMyB,IAAKD,KAAM,QAAUtC,EAAQwC,YAAY,OAGhF,uBACA,8BAAMjB,KAAKkB,UAAU9B,KACrB,8BACE,cAAC,kBAAD,CAAiB2B,KAAMf,KAAKkB,UAAU9B,GAAS+B,OArCtC,WACbhB,IAAQiB,QAAQ,uBAoCZ,SACE,cAAC,IAAD","file":"static/js/34.ab38af6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Edit_content__1fCKD\",\"q\":\"Edit_q__jwYtu\",\"ans\":\"Edit_ans__27WM8\",\"preview\":\"Edit_preview__Sxhvb\",\"image\":\"Edit_image__1pbXs\"};","import { Button, Checkbox, Input, message, Radio, RadioChangeEvent } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Textarea2MathJax from 'src/component/Textarea2MathJax';\nimport { chapterList, Question } from 'src/model/bank';\nimport style from './Edit.module.scss';\n\nconst Home = () => {\n  const [countdown, setCountdown] = useState<NodeJS.Timeout>();\n  const [isRendering, setIsRendering] = useState<boolean>(false);\n\n  const [randomId, setRandomId] = useState<string>('');\n\n  const [chapter, setChapter] = useState<string>('');\n\n  const [question, setQuestion] = useState<string>('');\n  const [answer, setAnswer] = useState<string>('');\n\n  const [hasImage, setHasImage] = useState<boolean>(false);\n\n  useEffect(() => {\n    setRandomId(Date.now().toString(16));\n  }, [question, answer]);\n\n  useEffect(() => {\n    setIsRendering(true);\n    if (countdown) clearTimeout(countdown);\n    const newCountdown = setTimeout(() => {\n      setIsRendering(false);\n    }, 600);\n    setCountdown(newCountdown);\n  }, [question, answer]);\n\n  const handleEdit = (ev: { target: HTMLInputElement }) => {\n    try {\n      const inputJSON: string = ev.target.value;\n      const res: Question = JSON.parse(inputJSON);\n\n      if (\n        res.question === undefined ||\n        res.question === undefined ||\n        res.answer === undefined ||\n        res.hasImage === undefined\n      )\n        message.error('格式不符');\n      setChapter(res.chapter);\n      setQuestion(res.question);\n      setAnswer(res.answer);\n      setHasImage(res.hasImage);\n    } catch (e) {\n      message.error('格式不符');\n    }\n  };\n\n  const handleCheckbox = (val: RadioChangeEvent) => {\n    setChapter(val.target.value);\n  };\n\n  const handleQuestionEvent = (ev: { target: HTMLTextAreaElement }) => {\n    setQuestion(ev.target.value);\n  };\n\n  const handleAnswerEvent = (ev: { target: HTMLTextAreaElement }) => {\n    setAnswer(ev.target.value);\n  };\n\n  const onCheckboxClick = () => {\n    setHasImage(!hasImage);\n  };\n\n  const onCopy = () => {\n    message.success('已複製');\n  };\n\n  const result: Question = { id: randomId, chapter, question, answer, hasImage };\n\n  return (\n    <div className={style.content}>\n      <div>修改</div>\n      <Input placeholder=\"貼上JSON\" onChange={handleEdit} />\n      <div>章節</div>\n      <Radio.Group options={chapterList} onChange={handleCheckbox} value={chapter} />\n      <div>題目</div>\n      <Input.TextArea\n        rows={4}\n        placeholder=\"輸入題目\"\n        onChange={handleQuestionEvent}\n        value={question}\n      />\n      <div>答案</div>\n      <Input.TextArea rows={2} placeholder=\"輸入答案\" onChange={handleAnswerEvent} value={answer} />\n      <div>\n        <Checkbox id=\"hasImage\" checked={hasImage} onClick={onCheckboxClick}>\n          是否有圖\n        </Checkbox>\n      </div>\n      <hr />\n      <div className={style.preview}>\n        {isRendering === true && <div>產生中...</div>}\n        {isRendering === false && question && <Textarea2MathJax text={question} />}\n        {isRendering === false && answer && (\n          <Textarea2MathJax className={style.ans} text={'Ans: ' + answer} allowBlock={false} />\n        )}\n      </div>\n      <hr />\n      <div>{JSON.stringify(result)}</div>\n      <div>\n        <CopyToClipboard text={JSON.stringify(result)} onCopy={onCopy}>\n          <Button>複製文字</Button>\n        </CopyToClipboard>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}