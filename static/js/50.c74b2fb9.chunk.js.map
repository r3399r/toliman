{"version":3,"sources":["component/GridWith2Col.tsx","component/GridWith2Col.module.scss","pages/hw/Hw.module.scss","pages/hw/Hw.tsx","services/questionService.ts"],"names":["GridWith2Col","children","className","style","grid","map","child","i","classNames","card","left","module","exports","Hw","addDefaultSrc","ev","target","src","content","getQuestions","q","undefined","qqq","hasImage","img","id","alt","role","onError","text","question","answer","ans","questionsByKey","getAllQuestions","lodash","keyBy","bank","getQuestion","ids","allQuestions"],"mappings":"2JAyBeA,IAjBM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SACtB,OACE,qBAAKC,UAAWC,IAAMC,KAAtB,SACGH,EAASI,KAAI,SAACC,EAAkBC,GAAnB,OACZ,qBAEEL,UAAWM,IAAWL,IAAMM,KAAP,eAClBN,IAAMO,KAAOH,EAAI,IAAM,IAH5B,SAMGD,GALIC,U,oBCZfI,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,6B,oBCA7FD,EAAOC,QAAU,CAAC,QAAU,oBAAoB,IAAM,gBAAgB,IAAM,kB,iCCA5E,6DA+EeC,UAzEJ,WACT,IAyCMC,EAAgB,SAACC,GACrBA,EAAGC,OAAOC,IAAM,0BAGlB,OACE,qBAAKf,UAAWC,IAAMe,QAAtB,SACE,cAAC,IAAD,UACGC,YAhDe,CAcpB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAuBuBd,KAAI,SAACe,EAAab,GACnC,YAAUc,IAAND,EAAwB,gDAAqCb,EAArC,oCAAkBA,IAG5C,sBAAgBL,UAAWC,IAAMmB,IAAjC,WACkB,IAAfF,EAAEG,UACD,qBACErB,UAAWC,IAAMqB,IACjBP,IAAG,0BAAqBG,EAAEK,GAAvB,QACHC,IAAI,GACJC,KAAK,eACLC,QAASd,IAGb,cAAC,IAAD,CAAkBe,KAAI,UAAKtB,EAAI,EAAT,aAAea,EAAEU,YACvC,cAAC,IAAD,CAAkBD,KAAI,eAAUT,EAAEW,QAAU7B,UAAWC,IAAM6B,QAXrDZ,EAAEK,a,gCC5DxB,wEAGIQ,EAHJ,yBAKaC,EAAkB,WAG7B,YAFuBb,IAAnBY,IAA8BA,EAAiBE,IAAOC,MAAMC,IAAM,OAE/DJ,GAGIK,EAAc,SAACb,GAG1B,OAFqBS,IAEDT,IAGTN,EAAe,SAACoB,GAC3B,IAAMC,EAAeN,IAErB,OAAOK,EAAIlC,KAAI,SAACoB,GAAD,OAAgBe,EAAaf","file":"static/js/50.c74b2fb9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { ReactNode } from 'react';\nimport style from './GridWith2Col.module.scss';\n\ntype Props = {\n  children: ReactNode[];\n};\n\nconst GridWith2Col = ({ children }: Props) => {\n  return (\n    <div className={style.grid}>\n      {children.map((child: ReactNode, i: number) => (\n        <div\n          key={i}\n          className={classNames(style.card, {\n            [style.left]: i % 2 === 0,\n          })}\n        >\n          {child}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default GridWith2Col;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"GridWith2Col_grid__zLYRh\",\"left\":\"GridWith2Col_left__27tqY\",\"card\":\"GridWith2Col_card__JkVrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Hw_content__1MLvd\",\"ans\":\"Hw_ans__CCsAv\",\"img\":\"Hw_img__181Mo\"};","import { ChangeEvent } from 'react';\nimport GridWith2Col from 'src/component/GridWith2Col';\nimport Textarea2MathJax from 'src/component/Textarea2MathJax';\nimport { Question } from 'src/model/bank';\nimport { getQuestions } from 'src/services/questionService';\nimport style from './Hw.module.scss';\n\nconst Hw = () => {\n  const ids: string[] = [\n    // '17f620f9634',\n    // '17f62117853',\n    // '17f6214178c',\n    // '17f636f1fc8',\n    // '17f63703aff',\n    // '17f6371e3cc',\n    // '17f637320bc',\n    // '17f637526da',\n    // '17f63761d3e',\n    // '17f63770d79',\n    // '17f71d6b4b8',\n    // '17f7321aa31',\n\n    '17f63789c73',\n    '17f63797131',\n    '17f637c919f',\n    '17f637c591e',\n    '17f637d57da',\n    '17f637ea80c',\n    '17f6381676b',\n    '17f63826b3b',\n    '17f63836d3e',\n    '17f63842a0f',\n    '17f79262520',\n    '17f7931f1b8',\n\n    // '17f63889561',\n    // '17f63892e77',\n    // '17f638a1789',\n    // '17f638aa943',\n    // '17f638bd19e',\n    // '17f638cfc4b',\n    // '17f638e12d0',\n    // '17f638fa19e',\n    // '17f6390d761',\n    // '17f6392560d',\n    // '17f6392fabd',\n    // '17f63938f4d',\n  ];\n\n  const addDefaultSrc = (ev: ChangeEvent<HTMLImageElement>) => {\n    ev.target.src = '/toliman/images/09.PNG';\n  };\n\n  return (\n    <div className={style.content}>\n      <GridWith2Col>\n        {getQuestions(ids).map((q: Question, i: number) => {\n          if (q === undefined) return <div key={`error${i}`}>ERROR! id at {i} does not exists</div>;\n\n          return (\n            <div key={q.id} className={style.qqq}>\n              {q.hasImage === true && (\n                <img\n                  className={style.img}\n                  src={`/toliman/images/${q.id}.PNG`}\n                  alt=\"\"\n                  role=\"presentation\"\n                  onError={addDefaultSrc}\n                />\n              )}\n              <Textarea2MathJax text={`${i + 1}. ${q.question}`} />\n              <Textarea2MathJax text={`Ans: ${q.answer}`} className={style.ans} />\n            </div>\n          );\n        })}\n      </GridWith2Col>\n    </div>\n  );\n};\n\nexport default Hw;\n","import lodash from 'lodash';\nimport { bank, Question } from 'src/model/bank';\n\nlet questionsByKey: { [key: string]: Question };\n\nexport const getAllQuestions = (): { [key: string]: Question } => {\n  if (questionsByKey === undefined) questionsByKey = lodash.keyBy(bank, 'id');\n\n  return questionsByKey;\n};\n\nexport const getQuestion = (id: string): Question | undefined => {\n  const allQuestions = getAllQuestions();\n\n  return allQuestions[id];\n};\n\nexport const getQuestions = (ids: string[]): Question[] => {\n  const allQuestions = getAllQuestions();\n\n  return ids.map((id: string) => allQuestions[id]);\n};\n"],"sourceRoot":""}