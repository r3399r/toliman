{"version":3,"sources":["pages/edit/Edit.module.scss","pages/edit/Edit.tsx"],"names":["module","exports","Home","useState","message","setMessage","countdown","setCountdown","isRendering","setIsRendering","randomId","setRandomId","chapter","setChapter","question","setQuestion","answer","setAnswer","hasImage","setHasImage","useEffect","Date","now","toString","clearTimeout","newCountdown","setTimeout","result","id","className","style","content","fullWidth","placeholder","onChange","ev","inputJSON","target","value","res","JSON","parse","undefined","e","row","val","chapterList","map","v","i","control","size","label","multiline","checked","onClick","preview","text","ans","stringify","onCopy","options","format","variant","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal"],"mappings":"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","file":"static/js/56.c0283223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Edit_content__1MQdD\",\"q\":\"Edit_q__16Dh0\",\"ans\":\"Edit_ans__j6Rmd\",\"preview\":\"Edit_preview__1NlAG\",\"image\":\"Edit_image__2fkC3\"};","import {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Snackbar,\n  TextField,\n} from '@mui/material';\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Textarea2MathJax from 'src/component/Textarea2MathJax';\nimport { chapterList, Question } from 'src/model/bank';\nimport style from './Edit.module.scss';\n\nconst Home = () => {\n  const [message, setMessage] = useState<string>();\n  const [countdown, setCountdown] = useState<NodeJS.Timeout>();\n  const [isRendering, setIsRendering] = useState<boolean>(false);\n\n  const [randomId, setRandomId] = useState<string>('');\n\n  const [chapter, setChapter] = useState<string>('');\n\n  const [question, setQuestion] = useState<string>('');\n  const [answer, setAnswer] = useState<string>('');\n\n  const [hasImage, setHasImage] = useState<boolean>(false);\n\n  useEffect(() => {\n    setRandomId(Date.now().toString(16));\n  }, [question, answer]);\n\n  useEffect(() => {\n    setIsRendering(true);\n    if (countdown) clearTimeout(countdown);\n    const newCountdown = setTimeout(() => {\n      setIsRendering(false);\n    }, 600);\n    setCountdown(newCountdown);\n  }, [question, answer]);\n\n  const handleEdit = (ev: ChangeEvent<HTMLInputElement>) => {\n    try {\n      const inputJSON: string = ev.target.value;\n      const res: Question = JSON.parse(inputJSON);\n\n      if (\n        res.question === undefined ||\n        res.question === undefined ||\n        res.answer === undefined ||\n        res.hasImage === undefined\n      )\n        setMessage('格式不符');\n      setChapter(res.chapter);\n      setQuestion(res.question);\n      setAnswer(res.answer);\n      setHasImage(res.hasImage);\n    } catch (e) {\n      setMessage('格式不符');\n    }\n  };\n\n  const handleCheckbox = (val: ChangeEvent<HTMLInputElement>) => {\n    setChapter(val.target.value);\n  };\n\n  const handleQuestionEvent = (ev: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(ev.target.value);\n  };\n\n  const handleAnswerEvent = (ev: ChangeEvent<HTMLInputElement>) => {\n    setAnswer(ev.target.value);\n  };\n\n  const onCheckboxClick = () => {\n    setHasImage(!hasImage);\n  };\n\n  const onCopy = () => {\n    setMessage('已複製');\n  };\n\n  const onClose = () => {\n    setMessage(undefined);\n  };\n\n  const result: Question = { id: randomId, chapter, question, answer, hasImage };\n\n  return (\n    <>\n      <div className={style.content}>\n        <div>修改</div>\n        <TextField fullWidth={true} placeholder=\"貼上JSON\" onChange={handleEdit} />\n        <div>章節</div>\n        <RadioGroup row={true} value={chapter} onChange={handleCheckbox}>\n          {chapterList?.map((v: string, i: number) => (\n            <FormControlLabel key={i} value={v} control={<Radio size=\"small\" />} label={v} />\n          ))}\n        </RadioGroup>\n        <div>題目</div>\n        <TextField\n          placeholder=\"輸入題目\"\n          multiline={true}\n          fullWidth={true}\n          onChange={handleQuestionEvent}\n          value={question}\n        />\n        <div>答案</div>\n        <TextField\n          multiline={true}\n          fullWidth={true}\n          placeholder=\"輸入答案\"\n          onChange={handleAnswerEvent}\n          value={answer}\n        />\n        <FormControlLabel\n          control={<Checkbox id=\"hasImage\" checked={hasImage} onClick={onCheckboxClick} />}\n          label=\"是否有圖\"\n        />\n        <hr />\n        <div className={style.preview}>\n          {isRendering === true && <div>產生中...</div>}\n          {isRendering === false && question && <Textarea2MathJax text={question} />}\n          {isRendering === false && answer && (\n            <Textarea2MathJax className={style.ans} text={'Ans: ' + answer} />\n          )}\n        </div>\n        <hr />\n        <div>{JSON.stringify(result)}</div>\n        <div>\n          <CopyToClipboard\n            text={JSON.stringify(result)}\n            onCopy={onCopy}\n            options={{ format: 'text/plain' }}\n          >\n            <Button variant=\"contained\">複製文字</Button>\n          </CopyToClipboard>\n        </div>\n      </div>\n      <Snackbar\n        open={message !== undefined}\n        autoHideDuration={3000}\n        onClose={onClose}\n        message={message}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      />\n    </>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}